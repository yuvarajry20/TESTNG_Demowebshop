<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="1" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-26T16:35:12 IST" name="Suite" finished-at="2025-03-26T16:35:27 IST" duration-ms="14651">
    <groups>
    </groups>
    <test started-at="2025-03-26T16:35:12 IST" name="Test" finished-at="2025-03-26T16:35:27 IST" duration-ms="14651">
      <class name="com.Tests.HomeTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.Tests.HomeTest@378542de]" started-at="2025-03-26T16:35:12 IST" name="setup" finished-at="2025-03-26T16:35:24 IST" duration-ms="11381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginTest()[pri:0, instance:com.Tests.HomeTest@378542de]" started-at="2025-03-26T16:35:24 IST" name="loginTest" finished-at="2025-03-26T16:35:24 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.HomeTest@378542de]" started-at="2025-03-26T16:35:24 IST" name="tearDown" finished-at="2025-03-26T16:35:25 IST" duration-ms="1054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.Tests.HomeTest -->
      <class name="com.Tests.RegisterTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.Tests.RegisterTest@f381794]" started-at="2025-03-26T16:35:13 IST" name="setup" finished-at="2025-03-26T16:35:24 IST" duration-ms="10419" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.Tests.RegisterTest@f381794]" started-at="2025-03-26T16:35:13 IST" name="setup" finished-at="2025-03-26T16:35:24 IST" duration-ms="10429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.Tests.RegisterTest@f381794]" started-at="2025-03-26T16:35:13 IST" name="setup" finished-at="2025-03-26T16:35:24 IST" duration-ms="10753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.Tests.RegisterTest@f381794]" started-at="2025-03-26T16:35:24 IST" name="Register" data-provider="excelData" finished-at="2025-03-26T16:35:27 IST" duration-ms="2875" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[cccc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ddd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[bbya852@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[123456.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration was not successful expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration was not successful expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.Tests.RegisterTest.Register(RegisterTest.java:31)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:81)
at org.testng.internal.thread.Async$AsyncTask.run(Async.java:34)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method signature="Register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.Tests.RegisterTest@f381794]" started-at="2025-03-26T16:35:24 IST" name="Register" data-provider="excelData" finished-at="2025-03-26T16:35:26 IST" duration-ms="2771" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[aaaa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bbb]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ccz9632@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[123456.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration was not successful expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration was not successful expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.Tests.RegisterTest.Register(RegisterTest.java:31)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:81)
at org.testng.internal.thread.Async$AsyncTask.run(Async.java:34)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method signature="Register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.Tests.RegisterTest@f381794]" started-at="2025-03-26T16:35:24 IST" name="Register" data-provider="excelData" finished-at="2025-03-26T16:35:27 IST" duration-ms="2557" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[eeee]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fff]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[aabx147@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[123456.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration was not successful expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration was not successful expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.Tests.RegisterTest.Register(RegisterTest.java:31)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:81)
at org.testng.internal.thread.Async$AsyncTask.run(Async.java:34)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.RegisterTest@f381794]" started-at="2025-03-26T16:35:26 IST" name="tearDown" finished-at="2025-03-26T16:35:27 IST" duration-ms="608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.RegisterTest@f381794]" started-at="2025-03-26T16:35:27 IST" name="tearDown" finished-at="2025-03-26T16:35:27 IST" duration-ms="567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.Tests.RegisterTest@f381794]" started-at="2025-03-26T16:35:27 IST" name="tearDown" finished-at="2025-03-26T16:35:27 IST" duration-ms="530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.Tests.RegisterTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
